defaults: &workdirAndImage
  working_directory: ~/workspace
  docker:
    - image: circleci/openjdk:8-jdk

version: 2.1
jobs:

  checkout_code:
    <<: *workdirAndImage
    steps:
      - checkout:
          path: ~/workspace/repo
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - repo/
            
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build React App
          command: npm run build
      - save_cache:
          key: app-build-cache-{{ .Branch }}
          paths:
            - ./build
      # - run:
      #     name: Deploy to Vercel
      #     command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=build

  build_push_image:
    docker:
      - image: circleci/openjdk:16.0.1-jdk-buster

    working_directory: ~/sample-springboot-api
    
    steps:
      # git pull
      - checkout

      # setup testing env
      # the following commented lines are not allowed in the free version of circleci
      #       - setup_remote_docker:
      #           docker_layer_caching: true
      - run:
          name: Login to DockerHub
          command: docker login -u ntwariegide -p edaedaeda
      - run: docker build -t ntwariegide/electrica-front-end .
      - run: docker push ntwariegide/electrica-front-end
      # - run:
      #     name: Build application Docker image
      #     command: |
      #       docker build --cache-from=app -t ntwariegide/electrica-front-end .
      # - deploy:
      #     name: Push application Docker image
      #     command: |
      #       docker push ntwariegide/electrica-front-end

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - exam

      - build_push_image: 
          filters:
            branches:
              only:
                - master
                - exam